
# Trigger on all pushes to main
trigger: 
  - main

# Run on all PRs, by default this is the case
# pr:
#   branches:
#     include:
#       - '*'

# Run a nightly (PST), to create the alpha release
schedules:
  - cron: '0 8 * * *'
    displayName: Nightly Alpha Release Build
    branches:
      include:
      - main

variables:
  - name: releaseType   # The NPM release tag
    value: ""           # Can be empty for no release, 'dev' (alpha), 'latest' (STABLE) or 'next' (beta)

resources:
  repositories:
    - repository: 1ESPipelineTemplates
      type: git
      name: 1ESPipelineTemplates/1ESPipelineTemplates
      ref: refs/tags/release

extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    serviceTreeId: e38fcba7-191b-47ad-bb71-aeff7c983e3f
    featureFlags:
      enableSRMonitoring: true
    pool:
      name: ess-1eshp-windows-latest

    # Separate out the CI builds from releasing
    stages:
      - stage: buildStage
        displayName: Build
        jobs:
          - job: buildJob
            displayName: CI Build and Test
            steps:
              - task: Npm@1
                displayName: 'Set postinstall scripts to true'
                inputs:
                  command: 'custom'
                  customCommand: 'config set ignore-scripts false'
              - task: NodeTool@0
                displayName: 'Install Node LTS'
                inputs:
                  versionSpec: '22.x'
              - task: Npm@1
                displayName: "Install Dependencies"
                inputs:
                  command: "install"
              - task: Npm@1
                displayName: "Build App"
                inputs:
                  command: "custom"
                  customCommand: "run build"
              - task: Npm@1
                displayName: "Build App (ESM)"
                inputs:
                  command: "custom"
                  customCommand: "run build:es5"
              - task: Npm@1
                displayName: "Package for NPM"
                inputs:
                  command: "custom"
                  customCommand: "run build:package"
              - task: Npm@1
                displayName: "Build Debug"
                inputs:
                  command: "custom"
                  customCommand: "run build:debug"
              - task: Npm@1
                displayName: 'Run jest unit tests'
                inputs:
                  command: 'custom'
                  customCommand: 'run test:unit'
              - task: Npm@1
                enabled: true
                displayName: 'Run jest integration tests'
                env:
                  ResourceConnectionString: $(RESOURCECONNECTIONSTRING)
                inputs:
                  command: 'custom'
                  customCommand: 'run execute:integrationtest'

              - task: ManifestGeneratorTask@0
                displayName: 'Generation Task'
                inputs:
                    BuildDropPath: $(System.DefaultWorkingDirectory)

      - stage: releaseStage
        dependsOn: buildStage
        condition: eq(variables['Build.CronSchedule.DisplayName'], 'Nightly Alpha Release Build') # OR started manually.
        displayName: Release
        jobs:
          - job: releaseBuild
            displayName: Build For Release
            templateContext:
              outputs:
              - output: pipelineArtifact
                path: $(System.DefaultWorkingDirectory)/
            steps:
              - task: Npm@1
                displayName: 'Set postinstall scripts to true'
                inputs:
                  command: 'custom'
                  customCommand: 'config set ignore-scripts false'
              - task: NodeTool@0
                displayName: 'Install Node LTS'
                inputs:
                  versionSpec: '22.x'
              - task: Npm@1
                displayName: "Install Dependencies"
                inputs:
                  command: "install"

            # - task: 
            #   displayName: Check for code changes in the last 24 hours (effectively since last alpha release)
            #  if no changes, don't release

              ## TODO: ADD TASK TO UPDATE PACKAGE.JSON with alpha tag if nightly created.
              ## update "x.y.z-beta.n" to "x.y.(z+1)-alpha-DATESTAMP"
              ## also set release type variable appropriately
              - task: 

              - task: Npm@1
                displayName: "Build App"
                inputs:
                  command: "custom"
                  customCommand: "run build"
              - task: Npm@1
                displayName: "Build App (ESM)"
                inputs:
                  command: "custom"
                  customCommand: "run build:es5"
              - task: Npm@1
                displayName: "Package for NPM"
                inputs:
                  command: "custom"
                  customCommand: "run build:package"

          - job: publishAlpha
            displayName: Publish to NPM (ESRP)
            dependsOn: releaseBuild
            condition: in(variables.releaseType, 'dev', 'next', 'latest')  # Only run this job if the releaseType is set
            templateContext:
              type: releaseJob
              isProduction: true
              inputs:
                - input: pipelineArtifact
                  artifactName: drop
                  targetPath: $(System.DefaultWorkingDirectory)/drop
              steps:
                - task: EsrpRelease@9
                  displayName: ESRP NPM Deploy
                  enabled: false                    ## TODO: ENABLE ONCE ALL IS GOOD
                  timeoutInMinutes: 0
                  inputs:
                    connectedservicename: ACS WebchatAdapter ESRP Release Connection
                    usemanagedidentity: true
                    keyvaultname: AcsWebChatAdapterRelease
                    signcertname: AcsWCA-ReleaseCert-9b8f
                    clientid: 9ed91db5-8ad8-419b-9b8f-00b5edaffd07
                    intent: PackageDistribution
                    contenttype: npm
                    contentsource: Folder
                    folderlocation: $(System.DefaultWorkingDirectory)/drop/package
                    waitforreleasecompletion: true
                    owners: wamo@microsoft.com
                    approvers: eboltonmaggs@microsoft.com
                    serviceendpointurl: https://api.esrp.microsoft.com
                    mainpublisher: ESRPRELPACMAN
                    downloadentity: DownloadCenter
                    domaintenantid: cdc5aeea-15c5-4db6-b079-fcadd2505dc2
                    contentorigin: azeus
                    productstate: $(releaseType)
                    audience: Workflow.A_S_AV_PackageManager
              
                
